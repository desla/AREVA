-- Данные КПП (Converter station).

CREATE TABLE CSDATA (
   ID NUMBER(10) CONSTRAINT NN_CSDATA_ID NOT NULL,
   DATA_TIME TIMESTAMP( 6 ) NOT NULL ENABLE,
   LINE_ID NUMBER( 2 ) NOT NULL ENABLE,
   LINE_CURRENT_SETPOINT FLOAT( 126 ), 
   LINE_CURRENT FLOAT( 126 ), 
   LINE_VOLTAGE FLOAT( 126 ),
   POTROOM1_VOLTAGE FLOAT( 126 ), 
   POTROOM2_VOLTAGE FLOAT( 126 ), 
   POTROOM3_VOLTAGE FLOAT( 126 ), 
   POTROOM4_VOLTAGE FLOAT( 126 ), 
   POTROOM5_VOLTAGE FLOAT( 126 )
)
PCTUSED    0
PCTFREE    5
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          32K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE CSDATA IS 'Интеграция: Данные КПП';
COMMENT ON COLUMN CSDATA.ID IS 'Идентификатор';
COMMENT ON COLUMN CSDATA.DATA_TIME IS 'Время данных';
COMMENT ON COLUMN CSDATA.LINE_ID IS 'Идентификатор серии';
COMMENT ON COLUMN CSDATA.LINE_CURRENT_SETPOINT IS 'Заданный ток серии';
COMMENT ON COLUMN CSDATA.LINE_CURRENT IS 'Ток серии';
COMMENT ON COLUMN CSDATA.LINE_VOLTAGE IS 'Напряжение серии';
COMMENT ON COLUMN CSDATA.POTROOM1_VOLTAGE IS 'Напряжение корпуса с индексом 1';
COMMENT ON COLUMN CSDATA.POTROOM2_VOLTAGE IS 'Напряжение корпуса с индексом 2';
COMMENT ON COLUMN CSDATA.POTROOM3_VOLTAGE IS 'Напряжение корпуса с индексом 3';
COMMENT ON COLUMN CSDATA.POTROOM4_VOLTAGE IS 'Напряжение корпуса с индексом 4';
COMMENT ON COLUMN CSDATA.POTROOM5_VOLTAGE IS 'Напряжение корпуса с индексом 5';

CREATE UNIQUE INDEX PK_CSDATA ON CSDATA
(ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          32K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;

CREATE UNIQUE INDEX UN_CSDATA ON CSDATA
(LINE_ID, DATA_TIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          32K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;

ALTER TABLE CSDATA ADD (
  CONSTRAINT PK_CSDATA
  PRIMARY KEY
  (ID)
  USING INDEX PK_CSDATA
  ENABLE VALIDATE,
  CONSTRAINT UN_CSDATA
  UNIQUE (LINE_ID, DATA_TIME)
  USING INDEX UN_CSDATA
  ENABLE VALIDATE);

ALTER TABLE CSDATA ADD (
  CONSTRAINT FK_CSDATA_LINE_ID 
  FOREIGN KEY (LINE_ID) 
  REFERENCES RI.LINES (LINE_ID)
  ENABLE VALIDATE);

GRANT REFERENCES, SELECT, INSERT, UPDATE, DELETE ON CSDATA TO PUBLIC;

CREATE SEQUENCE CSDATA_SEQ
  MINVALUE 1
  MAXVALUE 9999999999999999999999999999
  INCREMENT BY 1
  START WITH 1
  CACHE 20
  NOORDER
  NOCYCLE;

-- Формирование идентификатора.
CREATE OR REPLACE TRIGGER BI_CSDATA 
  before insert on CSDATA               
  for each row  
begin   
  if :NEW.ID is null then 
    select CSDATA_SEQ.nextval into :NEW.ID from dual; 
  end if; 
end;
/

-- История изменений данных КПП.
CREATE TABLE CSDATACHANGE (
   ID NUMBER(10) CONSTRAINT NN_CSDATACHANGE_ID NOT NULL,
   CSDATA_ID NUMBER( 10 ) NOT NULL ENABLE,
   CHANGE_TIME TIMESTAMP( 6 ) NOT NULL ENABLE,
   USER_ID NUMBER( 5 ) NOT NULL ENABLE,   
   LINE_CURRENT_SETPOINT FLOAT( 126 ), 
   LINE_CURRENT FLOAT( 126 ), 
   LINE_VOLTAGE FLOAT( 126 ), 
   POTROOM1_VOLTAGE FLOAT( 126 ), 
   POTROOM2_VOLTAGE FLOAT( 126 ), 
   POTROOM3_VOLTAGE FLOAT( 126 ), 
   POTROOM4_VOLTAGE FLOAT( 126 ), 
   POTROOM5_VOLTAGE FLOAT( 126 )
)
PCTUSED    0
PCTFREE    5
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          32K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE CSDATACHANGE IS 'Интеграция: История изменений данных КПП';
COMMENT ON COLUMN CSDATACHANGE.ID IS 'Идентификатор';
COMMENT ON COLUMN CSDATACHANGE.CSDATA_ID IS 'Идентификатор данных КПП';
COMMENT ON COLUMN CSDATACHANGE.CHANGE_TIME IS 'Время изменения данных';
COMMENT ON COLUMN CSDATACHANGE.USER_ID IS 'Идентификатор пользователя';
COMMENT ON COLUMN CSDATACHANGE.LINE_CURRENT_SETPOINT IS 'Заданный ток серии';
COMMENT ON COLUMN CSDATACHANGE.LINE_CURRENT IS 'Ток серии';
COMMENT ON COLUMN CSDATACHANGE.LINE_VOLTAGE IS 'Напряжение серии';
COMMENT ON COLUMN CSDATACHANGE.POTROOM1_VOLTAGE IS 'Напряжение корпуса с индексом 1';
COMMENT ON COLUMN CSDATACHANGE.POTROOM2_VOLTAGE IS 'Напряжение корпуса с индексом 2';
COMMENT ON COLUMN CSDATACHANGE.POTROOM3_VOLTAGE IS 'Напряжение корпуса с индексом 3';
COMMENT ON COLUMN CSDATACHANGE.POTROOM4_VOLTAGE IS 'Напряжение корпуса с индексом 4';
COMMENT ON COLUMN CSDATACHANGE.POTROOM5_VOLTAGE IS 'Напряжение корпуса с индексом 5';

CREATE UNIQUE INDEX PK_CSDATACHANGE ON CSDATACHANGE
(ID)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          32K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX UN_CSDATACHANGE ON CSDATACHANGE
(CSDATA_ID, CHANGE_TIME)
LOGGING
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          32K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;

ALTER TABLE CSDATACHANGE ADD (
  CONSTRAINT PK_CSDATACHANGE
  PRIMARY KEY
  (ID)
  USING INDEX PK_CSDATACHANGE
  ENABLE VALIDATE,
  CONSTRAINT UN_CSDATACHANGE
  UNIQUE (CSDATA_ID, CHANGE_TIME)
  USING INDEX UN_CSDATACHANGE
  ENABLE VALIDATE);

ALTER TABLE CSDATACHANGE ADD (
  CONSTRAINT FK_CSDATACHANGE_CSDATA_ID 
  FOREIGN KEY (CSDATA_ID) 
  REFERENCES CSDATA (ID)
  ENABLE VALIDATE,
  CONSTRAINT FK_CSDATACHANGE_USER_ID 
  FOREIGN KEY (USER_ID) 
  REFERENCES RI.USERS (USER_ID)
  ENABLE VALIDATE  
  );

GRANT REFERENCES, SELECT, INSERT, UPDATE, DELETE ON CSDATACHANGE TO PUBLIC;

CREATE SEQUENCE CSDATACHANGE_SEQ
  MINVALUE 1
  MAXVALUE 9999999999999999999999999999
  INCREMENT BY 1
  START WITH 1
  CACHE 20
  NOORDER
  NOCYCLE;

-- Формирование идентификатора.
CREATE OR REPLACE TRIGGER BI_CSDATACHANGE 
  before insert on CSDATACHANGE               
  for each row  
begin   
  if :NEW.ID is null then 
    select CSDATACHANGE_SEQ.nextval into :NEW.ID from dual; 
  end if; 
end;
/

-- Автоматическое формирование истории.

CREATE OR REPLACE TRIGGER AIE_CSDATA
  AFTER INSERT OR UPDATE
  ON CSDATA
  FOR EACH ROW
DECLARE
  CHANGE_TIME TIMESTAMP( 6 );
  USER_ID NUMBER( 5 );
  LINE_CURRENT_SETPOINT FLOAT( 126 ); 
  LINE_CURRENT FLOAT( 126 );
  LINE_VOLTAGE FLOAT( 126 ); 
  POTROOM1_VOLTAGE FLOAT( 126 );
  POTROOM2_VOLTAGE FLOAT( 126 ); 
  POTROOM3_VOLTAGE FLOAT( 126 ); 
  POTROOM4_VOLTAGE FLOAT( 126 ); 
  POTROOM5_VOLTAGE FLOAT( 126 );
  WAS_CHANGED BOOLEAN := FALSE; -- TRUE, если были изменены данные.
BEGIN
  -- Фиксируем время.
  CHANGE_TIME := CURRENT_TIMESTAMP;
  -- Получаем идентификатор пользователя, автора изменений. 
  USER_ID := RI.GET_USER_ID;
  
  IF INSERTING THEN
    -- При добавлении новой записи просто переносим все что есть в историю.
    LINE_CURRENT_SETPOINT := :NEW.LINE_CURRENT_SETPOINT;
    LINE_CURRENT := :NEW.LINE_CURRENT;
    LINE_VOLTAGE := :NEW.LINE_VOLTAGE;
    POTROOM1_VOLTAGE := :NEW.POTROOM1_VOLTAGE;
    POTROOM2_VOLTAGE := :NEW.POTROOM2_VOLTAGE;
    POTROOM3_VOLTAGE := :NEW.POTROOM3_VOLTAGE;
    POTROOM4_VOLTAGE := :NEW.POTROOM4_VOLTAGE;
    POTROOM5_VOLTAGE := :NEW.POTROOM5_VOLTAGE;
    WAS_CHANGED := TRUE;
  END IF;
  
  IF UPDATING THEN
    -- При обновлении проверим, изменились ли значения конкретных полей...
    IF UPDATING ('LINE_CURRENT_SETPOINT') THEN
      LINE_CURRENT_SETPOINT := :NEW.LINE_CURRENT_SETPOINT;
      WAS_CHANGED := TRUE;
    END IF;
    IF UPDATING ('LINE_CURRENT') THEN
      LINE_CURRENT := :NEW.LINE_CURRENT;
      WAS_CHANGED := TRUE;
    END IF; 
    IF UPDATING ('LINE_VOLTAGE') THEN
      LINE_VOLTAGE := :NEW.LINE_VOLTAGE;
      WAS_CHANGED := TRUE;
    END IF;
    IF UPDATING ('POTROOM1_VOLTAGE') THEN
      POTROOM1_VOLTAGE := :NEW.POTROOM1_VOLTAGE;
      WAS_CHANGED := TRUE;
    END IF;     
    IF UPDATING ('POTROOM2_VOLTAGE') THEN
      POTROOM2_VOLTAGE := :NEW.POTROOM2_VOLTAGE;
      WAS_CHANGED := TRUE;
    END IF;     
    IF UPDATING ('POTROOM3_VOLTAGE') THEN
      POTROOM3_VOLTAGE := :NEW.POTROOM3_VOLTAGE;
      WAS_CHANGED := TRUE;
    END IF;     
    IF UPDATING ('POTROOM4_VOLTAGE') THEN
      POTROOM4_VOLTAGE := :NEW.POTROOM4_VOLTAGE;
      WAS_CHANGED := TRUE;
    END IF;     
    IF UPDATING ('POTROOM5_VOLTAGE') THEN
      POTROOM5_VOLTAGE := :NEW.POTROOM5_VOLTAGE;
      WAS_CHANGED := TRUE;
    END IF;
  END IF;
  
  IF WAS_CHANGED = TRUE THEN
    -- Были изменены данные. Формируем историю.  
    INSERT INTO CSDATACHANGE (
      CSDATA_ID, CHANGE_TIME, USER_ID, LINE_CURRENT_SETPOINT, LINE_CURRENT, LINE_VOLTAGE,
      POTROOM1_VOLTAGE, POTROOM2_VOLTAGE, POTROOM3_VOLTAGE, POTROOM4_VOLTAGE, POTROOM5_VOLTAGE )
    VALUES (
      :NEW.ID, CHANGE_TIME, USER_ID, LINE_CURRENT_SETPOINT, LINE_CURRENT, LINE_VOLTAGE,
      POTROOM1_VOLTAGE, POTROOM2_VOLTAGE, POTROOM3_VOLTAGE, POTROOM4_VOLTAGE, POTROOM5_VOLTAGE );
  END IF;
END;
/
